# This is a basic workflow to help you get started with Actions

name: Cpptest 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  run-cpptest:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      # Runs a single command using the runners shell
      - name: Get file list
        run: cpptesttrace --cpptesttraceTraceCommand='cc|asm|CC|i386-pc-phoenix-gcc' --cpptesttraceOutputFile='/home/buildtest/actions-runner/_work/phoenix-rtos-project/phoenix-rtos-project/cpptestscan.bdf' phoenix-rtos-build/build.sh clean fs core project image

      # Runs a set of commands using the runners shell
      - name: Run cpptest
        uses: parasoft/run-cpptest-action@1.0.1
        with:
          input: /home/buildtest/actions-runner/_work/phoenix-rtos-project/phoenix-rtos-project/cpptestscan.bdf
          installDir: /home/buildtest/cpptest
          #testConfig: 'user://sum'
          testConfig: 'builtin://MISRA C 2012'
          compilerConfig: gcc_9
          additionalParams: '-settings /home/buildtest/sarif.properties'
      - name: Upload results (SARIF)
        if: always()
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: reports/report.sarif
      - name: Archive reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: CpptestReports
          path: reports/*.*
        
